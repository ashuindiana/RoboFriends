{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoudary.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","cardArray","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAWeA,EAXF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACxB,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAK,wBAAwBJ,EAAG,gBAAiBK,IAAI,SAC1D,gCACC,mCAAMJ,KACN,4BAAIC,WCMOI,EAVE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACZC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GACnC,OAAO,cAAC,EAAD,CAAyBX,GAAIO,EAAOI,GAAGX,GAAIC,KAAMM,EAAOI,GAAGV,KAAMC,MAAOK,EAAOI,GAAGT,OAAvEK,EAAOI,GAAGX,OAE7B,OACC,8BACEQ,KCIWI,EAZE,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAClB,OACC,qBAAKV,UAAU,MAAf,SACC,uBAAOA,UAAU,mCAChBW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCECI,G,MARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAApE,SACEJ,EAAMK,aCiBKC,E,kDAjBd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHO,E,8DAMAC,EAAOC,GACzBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAGzB,OAAGG,KAAKJ,MAAMC,SACN,wDAEAG,KAAKX,MAAMK,a,GAdOQ,aC0CbC,E,kDApCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAbzC,EAAKZ,MAAQ,CACXlB,OAAQ,GACR4B,YAAa,IAJH,E,gEAQO,IAAD,OAClBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACvB,OAAQmC,S,+BAM/B,IAAD,OACAC,EAAgBd,KAAKJ,MAAMlB,OAAOqC,QAAO,SAAAC,GAC7C,OAAOA,EAAM5C,KAAK6C,cAAcC,SAAS,EAAKtB,MAAMU,YAAYW,kBAElE,OACE,sBAAK3C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQoC,e,GA5BZZ,aCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a2c6d463.chunk.js","sourcesContent":["const Card = ({id, name, email}) => {\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img src={'https://robohash.org/'+id+'?size=200x200'} alt=\"robo\" />\r\n\t\t\t<div>\r\n\t\t\t\t<h2> {name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Card;","import Card from './Card'\r\n\r\nconst CardList = ({robots})=> {\r\n\tconst cardArray = robots.map((user, i)=>{\r\n\t\treturn <Card key={robots[i].id} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\r\n\t});\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{cardArray}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default CardList;","const SearchBox= ({searchChange})=> {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input className='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype=\"search\" \r\n\t\t\t\tplaceholder=\"Search Robots\" \r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t\t/>\r\n\t\t</div>\r\n\t\t \r\n\t);\r\n}\r\nexport default SearchBox;","const Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY:'scroll', border: '1px solid black', height: '500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\tcomponentDidCatch (error, info) {\r\n\t\tthis.setState({hasError: true})\r\n\t}\r\n\trender(){\r\n\t\tif(this.state.hasError) {\r\n\t\t\treturn <h1>Something Went wrong!!</h1>\r\n\t\t}else{\r\n\t\t\treturn this.props.children;\r\n\t\t}\r\n\t}\r\n}\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\nimport CardList from '../Components/CardList.js';\nimport SearchBox from '../Components/SearchBox';\nimport './App.css';\nimport Scroll from '../Components/Scroll';\nimport ErrorBoundary from '../Components/ErrorBoudary';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({robots: users}));\n  }\n\n  onSearchChange = (event)=>{\n    this.setState({searchfield: event.target.value})\n  }\n  render(){\n    const filteredRobots= this.state.robots.filter(robot =>{\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n    })\n    return (\n      <div className='tc'>\n        <h1 className='f1'>RoboFriends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <ErrorBoundary>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundary>\n        </Scroll>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}